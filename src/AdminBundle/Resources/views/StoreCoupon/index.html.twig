{% extends 'AdminBundle::layout.html.twig' %}

{% block title %}Store Coupons | {{ parent() }}{% endblock %}

{% block content %}
    <header>
        <h1>Store coupons for &lt; {{ store.name }} &gt;</h1>
    </header>

    {{ form_start(form, {'attr': {'novalidate': 'novalidate', 'id': 'edit-coupons'}}) }}
    
    <ul class="store-coupons list-unstyled mutable-items" data-prototype="{{ include('AdminBundle:StoreCoupon:_coupon_prototype.html.twig')|e('html_attr') }}">
        {% for store_coupon in form.coupons %}
            <li class="list-item {{ store_coupon.vars.value.activity == 0 ? 'deactivated' : '' }}">
                <div class="container">
                    <div class="col-md-10">
                        {{ form_errors(store_coupon) }}
                        {{ form_widget(store_coupon) }}
                    </div>
                    <div class="col-md-2">
                        <a href="#" class="couponActions">First</a></br>
                        <a href="#" class="couponActions">Last</a></br>
                        <a href="#" class="couponActions">Up</a></br>
                        <a href="#" class="couponActions">Down</a></br>
                        <a href="#" class="couponActions activateLink">{{ store_coupon.vars.value.activity == 0 ? 'Activate' : 'Deactivate'}}</a><br>
                        <a href="#" class="couponActions removeLink">Remove</a>
                    </div>
                </div>
            </li>
        {% endfor %}
    </ul>
    <div class="actions text-right">
        <button type="submit" class="btn btn-danger">Save Changes</button>
        <a href="{{ path("admin_store_index") }}" class="btn btn-default">Cancel</a>
    </div>

    {{ form_end(form) }}
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script>
        var $collectionHolder;

        // setup an "add a tag" link
        var $addItemLink = $('<a href="#" class="add_item_link btn btn-default col-md-offset-2">Add Coupon</a>');
        var $newLinkLi = $('<li></li>').append($addItemLink);

        jQuery(document).ready(function() {
            // Get the ul that holds the collection of tags
            $collectionHolder = $('ul.mutable-items');

            // add the "add a tag" anchor and li to the tags ul
            $collectionHolder.append($newLinkLi);

            // count the current form inputs we have (e.g. 2), use that as the new
            // index when inserting a new item (e.g. 2)
            $collectionHolder.data('index', $collectionHolder.find(".list-item").length);

            $addItemLink.on('click', function(e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // add a new tag form (see next code block)
                addItemLink($collectionHolder, $newLinkLi);
            });

            // add a delete link to all of the existing tag form li elements
            $collectionHolder.find('li.list-item').each(function() {
                addItemFormDeleteLink($(this));
            });

            // add function for updating position before submit
            $('#edit-coupons').on('submit', function(event) {
                $collectionHolder.find('li.list-item .coupon-position').each(function(index) {
                    $(this).val(index);
                });
            });
        });

        function addItemLink($collectionHolder, $newLinkLi) {
            // Get the data-prototype explained earlier
            var prototype = $collectionHolder.data('prototype');

            // get the new index
            var index = $collectionHolder.data('index');

            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            var newForm = prototype.replace(/__name__/g, index);

            // increase the index with one for the next item
            $collectionHolder.data('index', index + 1);

            // Display the form in the page in an li, before the "Add a tag" link li
            var $newFormLi = $('<li class="list-item"></li>').append(newForm);
            $newLinkLi.before($newFormLi);

            // add a delete link to the new form
            addItemFormDeleteLink($newFormLi);
        }

        function addItemFormDeleteLink($itemFormLi) {
            var $removeFormA = $itemFormLi.find('a.removeLink');

            $removeFormA.on('click', function(e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // remove the li for the tag form
                $itemFormLi.remove();
            });
        }

        $("ul.store-coupons").sortable();
    </script>
{% endblock %}