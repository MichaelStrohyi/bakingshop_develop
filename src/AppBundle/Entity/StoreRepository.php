<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * StoreRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class StoreRepository extends EntityRepository
{
    /**
     * Return list aff all stores ordered by name
     *
     * @return Store
     * @author Michael Strohyi
     **/
    public function findAllByName()
    {
        return $this->findBy([], ['name' => 'asc']);
    }

    /**
     * Get current url for $store from db
     *
     * @param Store $store
     *
     * @return string|null
     * @author Michael Strohyi
     **/
    public function getUrlFromDB($store)
    {
        if (empty($store->getId())) {
            return;
        }
        $query = $this->getEntityManager()
            ->createQuery(
                'SELECT s.name FROM AppBundle:Store s '
                . 'WHERE s.id = :id'
            )
            ->setParameters([
                'id' => $store->getId(),
            ]);

        return $store->convertNameToUrl($query->getOneOrNullResult()['name']);
    }

    /**
     * Get link from db for store with given $id
     *
     * @param int $id
     *
     * @return string|null
     * @author Michael Strohyi
     **/
    public function findLinkById($id)
    {
        if (empty($id)) {
            return;
        }
        
        $query = $this->getEntityManager()
            ->createQuery(
                'SELECT s.link FROM AppBundle:Store s '
                . 'WHERE s.id = :id'
            )
            ->setParameters([
                'id' => $id,
            ]);

        return $this->getEntityManager()->getRepository('USPCPageBundle:Page')->getUrlFromRes($query->getOneOrNullResult()['link']);
    }

    /**
     * Return list off all stores, which have $subname in header
     *
     * @param string $subname
     * @param int $limit
     * @return array
     * @author Michael Strohyi
     **/
    public function findBySubname($subname, $limit = null)
    {
        # if length of search-string (subname) is < 2 return empty result
        if (strlen($subname) < 2) {
            return [];
        }

        $query = $this->getEntityManager()
            ->createQuery(
                'SELECT s FROM AppBundle:Store s '
                . 'WHERE s.name LIKE :subname OR s.keywords LIKE :subname '
                . 'ORDER by s.name ASC'
            )
            ->setParameters([
                'subname' => '%' . preg_replace(["/[\+]+/", "/[\s]+/", "/[-]+/", "/[%]+/"], "%", $subname) . '%',
            ])
            ->setMaxResults($limit);

        return $query->getResult();
    }

    /**
     * Return id of store with given feedId
     *
     * @param int $feedId
     *
     * @return Store
     * @author Michael Strohyi
     **/
    public function getStoreByFeedId($feedId)
    {
        if (empty($feedId)) {
            return;
        }

        $store = $this->findBy(['feedId' => $feedId]);
        return empty($store) ? null : $store[0];
    }

    /**
     * Return all stores with not null feedId if their feedIds are absent in given exclusions
     *
     * @param array $exclusions
     *
     * @return array
     * @author Michael Strohyi
     **/
    public function getAllFeedStores($exclusions = [])
    {
        $q = 'SELECT s FROM AppBundle:Store s WHERE s.feedId IS NOT NULL';
        if (!empty($exclusions)) {
            $exclusions = '(' . implode(', ', $exclusions) . ')';
            $q .= ' AND s.feedId NOT IN ' . $exclusions;
        }

        $query = $this->getEntityManager()->createQuery($q);

        return $query->getResult();
    }
}
